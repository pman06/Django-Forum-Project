version: 2.1

default: &python-image
  docker:
      - image: cimg/python:3.10.5

commands:
  install-tar:
    steps:
      - run: apt install -y tar gzip
      
  destroy-environment:
    steps:
      - run:
          name: destroy environments
          command: aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}
          when: on_fail
  
  setup_aws:
    steps:
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY
          aws-secret-access-key: AWS_SECRET_KEY
          aws-region: AWS_REGION_NAME


jobs:
  Create_Environment:
    <<: *python-image
    steps:
      - checkout
      - run:
          name: Create Environment
          command: |
              #create execution environment
              python3 -m venv ~/.django_env
              #activate environment
              source ~/.django_env/bin/activate
      - run:
          name: Build Environment
          command: |
              cd myproject
              python3 -m pip install -r requirements.txt

  Test_Environment:
    <<: *python-image
    steps:
      - checkout
      - run:
          name: Test Account App
          command: |
            pwd
            cd myproject
            python manage.py test accounts/tests
      - run:
          name: TEst Board App
          command: |
            python manage.py test board/tests
  
  
workflows:
  create-resources:
    jobs:
      - Create_Environment
      - Test_Environment:
          requires:
            - Create_Environment