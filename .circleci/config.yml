# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job  
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"
  
  print_hello:
    docker:
      - image: cimg/base:stable
    steps:
      - run:
          name: "Print hello"
          command:  "echo hello"

  print_world:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: "Print World"
          command: "echo World"
  
  print_my_name:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: "Print Name"
          command: "echo $MY_NAME"

  save_hello_world_output:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run: echo $PWD
      - run: mkdir -p workspace && ls /tmp/ | grep "workspace"
      - run:
          name: "save file"
          command: echo "Text to ouput here" >> output.txt && ls -a
      - persist_to_workspace:
          root: workspace
          paths:
            - output.txt

  print_output_file:
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: "print output file"
          command: echo output.txt 

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - print_hello
      - print_world:
          requires:
            - print_hello
      - save_hello_world_output
      - print_output_file:
          requires:
            - save_hello_world_output

